# v3.800.12
# https://virtocommerce.atlassian.net/browse/VCST-2469
name: Common UI tests

on:
  workflow_call:
    inputs:
      vctestingRepo:
        description: 'UI tests repository'
        required: false
        type: string
        default: 'VirtoCommerce/vc-testing-module'
      vctestingRepoBranch:
        description: 'UI tests repository branch'
        required: false
        type: string
        default: 'dev'
      installModules:
        description: 'Enable or disable "Install Modules" step'
        required: false
        type: string
        default: 'true'
      installCustomModule:
        description: 'Enable or disable "Install Custom Modules" step'
        required: false
        type: string
        default: 'false'
      customModuleId:
        description: 'Custom Module id'
        required: false
        type: string
        default: ''
      customModuleUrl:
        description: 'Custom module Module url'
        required: false
        type: string
        default: ''
      platformDockerTag:
        description: 'Platform docker tag'
        required: false
        type: string
        default: 'local-latest'
      baseUrl:
        description: 'Base url'
        required: false
        type: string
        default: 'https://localhost:8090'

    secrets:
      envPAT:
        required: true

jobs:
  ui-autotests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        browser: [chromium]

    env:
      GITHUB_TOKEN: ${{ secrets.envPAT }}
      VC-TESTING_REPO: ${{ inputs.vctestingRepo}}
      VC-TESTING_REPO_BRANCH: ${{ inputs.vctestingRepoBranch }}
      VC-TESTING_PATH: 'vc-quality-gate-vctesting'

    steps:

    - name: Install VirtoCommerce.GlobalTool
      uses: VirtoCommerce/vc-github-actions/setup-vcbuild@master

    - name: Getting tests
      uses: actions/checkout@v4
      with:
        repository: ${{ env.VC-TESTING_REPO }}
        ref: ${{ env.VC-TESTING_REPO_BRANCH }}
        path: ${{ env.VC-TESTING_PATH }}

    - name: Docker Env Full
      uses: VirtoCommerce/vc-github-actions/docker-env-full@VCST-2789
      with:
        platformDockerTag: ${{ inputs.platformDockerTag }}
        installModules: ${{ inputs.installModules }}
        installCustomModule: ${{ inputs.installCustomModule }}
        customModuleId: ${{ inputs.customModuleId }}
        customModuleUrl: ${{ inputs.customModuleUrl }}
        envDir: '${{ github.workspace }}'
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-html
        
    - name: Install Playwright Browsers
      run: playwright install --with-deps ${{ matrix.browser }}
      
    - name: Run GraphQL Tests
      run: |
        echo "Running GraphQL tests against ${{ inputs.baseUrl }}"
        pytest tests_graphql/tests/ --browser ${{ matrix.browser }} --html=graphql-report.html --self-contained-html --tracing=retain-on-failure -v -s

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: graphql-test-results-${{ matrix.browser }}
        path: |
          graphql-report.html
          playwright-report/
          test-results/
        retention-days: 30